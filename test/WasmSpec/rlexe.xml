<?xml version="1.0" encoding="utf-8"?>
<!-- Auto Generated by convert-test-suite -->
<regress-exe>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra/chakra_atomic_load.baseline</baseline>
      <compile-flags>-wasm -args chakra/chakra_atomic_load.wast -endargs -WasmThreads -ESSharedArrayBuffer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra/chakra_atomic_load.baseline</baseline>
      <compile-flags>-wasm -args chakra/chakra_atomic_load.wast -endargs -nonative -WasmThreads -ESSharedArrayBuffer</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra/chakra_atomic_load.baseline</baseline>
      <compile-flags>-wasm -args chakra/chakra_atomic_load.wast -endargs -WasmThreads -ESSharedArrayBuffer -WasmSharedArrayVirtualBuffer- -WasmFastArray-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra/chakra_atomic_store.baseline</baseline>
      <compile-flags>-wasm -args chakra/chakra_atomic_store.wast -endargs -WasmThreads -ESSharedArrayBuffer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra/chakra_atomic_store.baseline</baseline>
      <compile-flags>-wasm -args chakra/chakra_atomic_store.wast -endargs -nonative -WasmThreads -ESSharedArrayBuffer</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra/chakra_atomic_store.baseline</baseline>
      <compile-flags>-wasm -args chakra/chakra_atomic_store.wast -endargs -WasmThreads -ESSharedArrayBuffer -WasmSharedArrayVirtualBuffer- -WasmFastArray-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_extends_i32.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_extends_i32.wast -endargs -WasmSignExtends</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_extends_i32.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_extends_i32.wast -endargs -nonative -WasmSignExtends</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_extends_i64.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_extends_i64.wast -endargs -WasmSignExtends</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_extends_i64.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_extends_i64.wast -endargs -nonative -WasmSignExtends</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_i32.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_i32.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_i32.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_i32.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_i32.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_i32.wast -endargs -wasmMathExFilter</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_i64.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_i64.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_i64.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_i64.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/chakra_generated/chakra_i64.baseline</baseline>
      <compile-flags>-wasm -args chakra_generated/chakra_i64.wast -endargs -wasmMathExFilter</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/address.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/address.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/address.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/address.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/address.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/address.wast -endargs -wasmfastarray-</compile-flags>
      <tags>exclude_x86</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/align.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/align.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/align.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/align.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/binary.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/binary.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/binary.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/binary.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/block.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/block.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/block.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/block.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/br.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/br.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/br.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/br.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/br_if.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/br_if.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/br_if.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/br_if.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/br_table.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/br_table.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/br_table.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/br_table.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/break-drop.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/break-drop.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/break-drop.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/break-drop.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/call.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/call.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/call.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/call.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/call_indirect.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/call_indirect.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/call_indirect.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/call_indirect.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/const.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/const.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/const.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/const.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/conversions.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/conversions.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/conversions.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/conversions.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/custom.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/custom.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/custom.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/custom.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/data.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/data.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/data.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/data.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/elem.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/elem.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/elem.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/elem.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/endianness.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/endianness.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/endianness.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/endianness.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/exports.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/exports.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/exports.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/exports.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f32.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f32.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f32.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f32.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f32_bitwise.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f32_bitwise.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f32_bitwise.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f32_bitwise.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f32_cmp.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f32_cmp.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f32_cmp.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f32_cmp.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f64.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f64.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f64.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f64.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f64_bitwise.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f64_bitwise.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f64_bitwise.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f64_bitwise.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f64_cmp.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f64_cmp.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/f64_cmp.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/f64_cmp.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/fac.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/fac.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/fac.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/fac.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_exprs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_exprs.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_exprs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_exprs.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_literals.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_literals.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_literals.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_literals.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_memory.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_memory.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_memory.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_memory.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_memory.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_memory.wast -endargs -wasmfastarray-</compile-flags>
      <tags>exclude_x86</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_misc.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_misc.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/float_misc.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/float_misc.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/forward.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/forward.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/forward.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/forward.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/func.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/func.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/func.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/func.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/func_ptrs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/func_ptrs.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/func_ptrs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/func_ptrs.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/get_local.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/get_local.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/get_local.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/get_local.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/globals.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/globals.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/globals.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/globals.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/i32.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/i32.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/i32.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/i32.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/i32.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/i32.wast -endargs -wasmMathExFilter</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/i64.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/i64.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/i64.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/i64.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/i64.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/i64.wast -endargs -wasmMathExFilter</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/if.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/if.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/if.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/if.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/imports.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/imports.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/imports.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/imports.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/inline-module.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/inline-module.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/inline-module.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/inline-module.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/int_exprs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/int_exprs.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/int_exprs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/int_exprs.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/int_exprs.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/int_exprs.wast -endargs -wasmMathExFilter</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/int_literals.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/int_literals.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/int_literals.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/int_literals.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/labels.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/labels.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/labels.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/labels.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/left-to-right.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/left-to-right.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/left-to-right.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/left-to-right.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/linking.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/linking.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/linking.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/linking.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/load.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/load.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/load.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/load.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/loop.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/loop.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/loop.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/loop.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory.wast -endargs -wasmfastarray-</compile-flags>
      <tags>exclude_x86</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_grow.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_grow.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_grow.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_grow.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_redundancy.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_redundancy.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_redundancy.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_redundancy.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_trap.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_trap.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_trap.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_trap.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/memory_trap.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/memory_trap.wast -endargs -wasmfastarray-</compile-flags>
      <tags>exclude_x86</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/nop.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/nop.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/nop.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/nop.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/return.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/return.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/return.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/return.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/select.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/select.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/select.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/select.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/set_local.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/set_local.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/set_local.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/set_local.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/skip-stack-guard-page.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/skip-stack-guard-page.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/skip-stack-guard-page.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/skip-stack-guard-page.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/stack.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/stack.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/stack.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/stack.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/start.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/start.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/start.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/start.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/store.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/store.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/store.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/store.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/switch.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/switch.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/switch.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/switch.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/tee_local.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/tee_local.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/tee_local.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/tee_local.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/token.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/token.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/token.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/token.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/traps.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/traps.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/traps.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/traps.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/traps.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/traps.wast -endargs -wasmfastarray-</compile-flags>
      <tags>exclude_x86</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/traps.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/traps.wast -endargs -wasmMathExFilter</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/type.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/type.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/type.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/type.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/typecheck.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/typecheck.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/typecheck.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/typecheck.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/unreachable.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/unreachable.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/unreachable.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/unreachable.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/unreached-invalid.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/unreached-invalid.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/unreached-invalid.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/unreached-invalid.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/unwind.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/unwind.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/unwind.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/unwind.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-custom-section-id.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-custom-section-id.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-custom-section-id.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-custom-section-id.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-import-field.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-import-field.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-import-field.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-import-field.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-import-module.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-import-module.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-import-module.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-import-module.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-invalid-encoding.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-invalid-encoding.wast -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/testsuite/core/utf8-invalid-encoding.baseline</baseline>
      <compile-flags>-wasm -args testsuite/core/utf8-invalid-encoding.wast -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/interface.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/interface.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/interface.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/interface.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/compile.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/compile.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/compile.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/compile.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/instantiate-bad-imports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/instantiate-bad-imports.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/instantiate-bad-imports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/instantiate-bad-imports.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/instantiate.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/instantiate.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/instantiate.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/instantiate.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/validate.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/validate.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/constructor/validate.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/constructor/validate.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/constructor.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/constructor.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/toString.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/toString.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/value-get-set.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/value-get-set.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/value-get-set.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/value-get-set.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/valueOf.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/valueOf.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/global/valueOf.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/global/valueOf.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/constructor-bad-imports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/constructor-bad-imports.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/constructor-bad-imports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/constructor-bad-imports.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/constructor.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/constructor.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/exports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/exports.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/exports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/exports.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/toString.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/instance/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/instance/toString.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/buffer.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/buffer.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/buffer.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/buffer.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/constructor.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/constructor.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/grow.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/grow.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/grow.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/grow.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/toString.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/memory/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/memory/toString.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/constructor.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/constructor.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/customSections.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/customSections.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/customSections.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/customSections.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/exports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/exports.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/exports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/exports.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/imports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/imports.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/imports.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/imports.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/toString.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/module/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/module/toString.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/constructor.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/constructor.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/constructor.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/get-set.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/get-set.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/get-set.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/get-set.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/grow.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/grow.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/grow.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/grow.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/length.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/length.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/length.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/length.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/toString.any.js -endargs</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>jsapi.js</files>
      <baseline>baselines/testsuite/js-api/table/toString.any.baseline</baseline>
      <compile-flags>-wasm -args testsuite/js-api/table/toString.any.js -endargs -nonative</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/extends/extends_i32.baseline</baseline>
      <compile-flags>-wasm -args features/extends/extends_i32.wast -endargs -WasmSignExtends</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/extends/extends_i32.baseline</baseline>
      <compile-flags>-wasm -args features/extends/extends_i32.wast -endargs -nonative -WasmSignExtends</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/extends/extends_i64.baseline</baseline>
      <compile-flags>-wasm -args features/extends/extends_i64.wast -endargs -WasmSignExtends</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/extends/extends_i64.baseline</baseline>
      <compile-flags>-wasm -args features/extends/extends_i64.wast -endargs -nonative -WasmSignExtends</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/nontrapping/nontrapping_conversions.baseline</baseline>
      <compile-flags>-wasm -args features/nontrapping/nontrapping_conversions.wast -endargs -WasmNontrapping</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/nontrapping/nontrapping_conversions.baseline</baseline>
      <compile-flags>-wasm -args features/nontrapping/nontrapping_conversions.wast -endargs -nonative -WasmNontrapping</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/threads/atomic_load.baseline</baseline>
      <compile-flags>-wasm -args features/threads/atomic_load.wast -endargs -WasmThreads -ESSharedArrayBuffer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/threads/atomic_load.baseline</baseline>
      <compile-flags>-wasm -args features/threads/atomic_load.wast -endargs -nonative -WasmThreads -ESSharedArrayBuffer</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/threads/atomic_load.baseline</baseline>
      <compile-flags>-wasm -args features/threads/atomic_load.wast -endargs -WasmThreads -ESSharedArrayBuffer -WasmSharedArrayVirtualBuffer- -WasmFastArray-</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/threads/atomic_store.baseline</baseline>
      <compile-flags>-wasm -args features/threads/atomic_store.wast -endargs -WasmThreads -ESSharedArrayBuffer</compile-flags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/threads/atomic_store.baseline</baseline>
      <compile-flags>-wasm -args features/threads/atomic_store.wast -endargs -nonative -WasmThreads -ESSharedArrayBuffer</compile-flags>
      <tags>exclude_dynapogo</tags>
    </default>
  </test>
  <test>
    <default>
      <files>spec.js</files>
      <baseline>baselines/features/threads/atomic_store.baseline</baseline>
      <compile-flags>-wasm -args features/threads/atomic_store.wast -endargs -WasmThreads -ESSharedArrayBuffer -WasmSharedArrayVirtualBuffer- -WasmFastArray-</compile-flags>
    </default>
  </test>
</regress-exe>
